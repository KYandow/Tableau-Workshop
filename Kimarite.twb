<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='banzuke clean date+' inline='true' name='federated.1txduqb00yjjkq16jy8q0182i1nd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='banzuke clean date' name='textscan.0k3saem1qlprxe10jr1eu0etcdc1'>
            <connection class='textscan' directory='C:/Users/Kyle/NSS_Data_Analytics/projects/Tableau-Workshop/Data' filename='banzuke clean date.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0k3saem1qlprxe10jr1eu0etcdc1' name='banzuke clean date.csv' table='[banzuke clean date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='basho' ordinal='0' />
            <column datatype='integer' name='id' ordinal='1' />
            <column datatype='integer' name='basho-id' ordinal='2' />
            <column datatype='string' name='rank' ordinal='3' />
            <column datatype='string' name='rikishi' ordinal='4' />
            <column datatype='string' name='heya' ordinal='5' />
            <column datatype='string' name='shusshin' ordinal='6' />
            <column datatype='date' name='birth_date' ordinal='7' />
            <column datatype='real' name='height' ordinal='8' />
            <column datatype='real' name='weight' ordinal='9' />
            <column datatype='string' name='prev' ordinal='10' />
            <column datatype='integer' name='prev_w' ordinal='11' />
            <column datatype='integer' name='prev_l' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0k3saem1qlprxe10jr1eu0etcdc1' name='banzuke clean date.csv' table='[banzuke clean date#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='basho' ordinal='0' />
              <column datatype='integer' name='id' ordinal='1' />
              <column datatype='integer' name='basho-id' ordinal='2' />
              <column datatype='string' name='rank' ordinal='3' />
              <column datatype='string' name='rikishi' ordinal='4' />
              <column datatype='string' name='heya' ordinal='5' />
              <column datatype='string' name='shusshin' ordinal='6' />
              <column datatype='date' name='birth_date' ordinal='7' />
              <column datatype='real' name='height' ordinal='8' />
              <column datatype='real' name='weight' ordinal='9' />
              <column datatype='string' name='prev' ordinal='10' />
              <column datatype='integer' name='prev_w' ordinal='11' />
              <column datatype='integer' name='prev_l' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.0k3saem1qlprxe10jr1eu0etcdc1' name='results prevent auto date.csv' table='[results prevent auto date#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='basho' ordinal='0' />
              <column datatype='integer' name='basho-id' ordinal='1' />
              <column datatype='integer' name='day' ordinal='2' />
              <column datatype='integer' name='rikishi1_id' ordinal='3' />
              <column datatype='string' name='rikishi1_rank' ordinal='4' />
              <column datatype='string' name='rikishi1_shikona' ordinal='5' />
              <column datatype='string' name='rikishi1_result' ordinal='6' />
              <column datatype='integer' name='rikishi1_win' ordinal='7' />
              <column datatype='string' name='kimarite' ordinal='8' />
              <column datatype='integer' name='rikishi2_id' ordinal='9' />
              <column datatype='string' name='rikishi2_rank' ordinal='10' />
              <column datatype='string' name='rikishi2_shikona' ordinal='11' />
              <column datatype='string' name='rikishi2_result' ordinal='12' />
              <column datatype='integer' name='rikishi2_win' ordinal='13' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[basho (results prevent auto date.csv)]' value='[results prevent auto date.csv].[basho]' />
          <map key='[basho-id (results prevent auto date.csv)]' value='[results prevent auto date.csv].[basho-id]' />
          <map key='[basho-id]' value='[banzuke clean date.csv].[basho-id]' />
          <map key='[basho]' value='[banzuke clean date.csv].[basho]' />
          <map key='[birth_date]' value='[banzuke clean date.csv].[birth_date]' />
          <map key='[day]' value='[results prevent auto date.csv].[day]' />
          <map key='[height]' value='[banzuke clean date.csv].[height]' />
          <map key='[heya]' value='[banzuke clean date.csv].[heya]' />
          <map key='[id]' value='[banzuke clean date.csv].[id]' />
          <map key='[kimarite]' value='[results prevent auto date.csv].[kimarite]' />
          <map key='[prev]' value='[banzuke clean date.csv].[prev]' />
          <map key='[prev_l]' value='[banzuke clean date.csv].[prev_l]' />
          <map key='[prev_w]' value='[banzuke clean date.csv].[prev_w]' />
          <map key='[rank]' value='[banzuke clean date.csv].[rank]' />
          <map key='[rikishi1_id]' value='[results prevent auto date.csv].[rikishi1_id]' />
          <map key='[rikishi1_rank]' value='[results prevent auto date.csv].[rikishi1_rank]' />
          <map key='[rikishi1_result]' value='[results prevent auto date.csv].[rikishi1_result]' />
          <map key='[rikishi1_shikona]' value='[results prevent auto date.csv].[rikishi1_shikona]' />
          <map key='[rikishi1_win]' value='[results prevent auto date.csv].[rikishi1_win]' />
          <map key='[rikishi2_id]' value='[results prevent auto date.csv].[rikishi2_id]' />
          <map key='[rikishi2_rank]' value='[results prevent auto date.csv].[rikishi2_rank]' />
          <map key='[rikishi2_result]' value='[results prevent auto date.csv].[rikishi2_result]' />
          <map key='[rikishi2_shikona]' value='[results prevent auto date.csv].[rikishi2_shikona]' />
          <map key='[rikishi2_win]' value='[results prevent auto date.csv].[rikishi2_win]' />
          <map key='[rikishi]' value='[banzuke clean date.csv].[rikishi]' />
          <map key='[shusshin]' value='[banzuke clean date.csv].[shusshin]' />
          <map key='[weight]' value='[banzuke clean date.csv].[weight]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>basho</remote-name>
            <remote-type>129</remote-type>
            <local-name>[basho]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>basho</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>basho-id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[basho-id]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>basho-id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rank]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>rank</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rikishi]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>rikishi</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>heya</remote-name>
            <remote-type>129</remote-type>
            <local-name>[heya]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>heya</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shusshin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shusshin]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>shusshin</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[birth_date]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>birth_date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height</remote-name>
            <remote-type>5</remote-type>
            <local-name>[height]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>height</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prev]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>prev</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_w</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prev_w]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>prev_w</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_l</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prev_l]</local-name>
            <parent-name>[banzuke clean date.csv]</parent-name>
            <remote-alias>prev_l</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>basho</remote-name>
            <remote-type>129</remote-type>
            <local-name>[basho (results prevent auto date.csv)]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>basho</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>basho-id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[basho-id (results prevent auto date.csv)]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>basho-id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi1_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rikishi1_id]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi1_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi1_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rikishi1_rank]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi1_rank</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi1_shikona</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rikishi1_shikona]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi1_shikona</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi1_result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rikishi1_result]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi1_result</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi1_win</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rikishi1_win]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi1_win</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kimarite</remote-name>
            <remote-type>129</remote-type>
            <local-name>[kimarite]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>kimarite</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi2_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rikishi2_id]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi2_id</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi2_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rikishi2_rank]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi2_rank</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi2_shikona</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rikishi2_shikona]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi2_shikona</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi2_result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rikishi2_result]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi2_result</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rikishi2_win</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rikishi2_win]</local-name>
            <parent-name>[results prevent auto date.csv]</parent-name>
            <remote-alias>rikishi2_win</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Height Inches' datatype='real' name='[Calculation_299207927385010176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[height] * .3937' />
      </column>
      <column caption='Weight Pounds' datatype='real' name='[Calculation_299207927389655041]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[weight] * 2.205' />
      </column>
      <column aggregation='None' datatype='integer' name='[Height (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[height]' peg='0' size='1.85' />
      </column>
      <column aggregation='None' datatype='integer' name='[Height Inches (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Calculation_299207927385010176]' peg='0' size='0.5' />
      </column>
      <column aggregation='None' datatype='integer' name='[Weight Pounds (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Calculation_299207927389655041]' peg='0' size='14.7' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='banzuke clean date.csv' datatype='table' name='[__tableau_internal_object_id__].[banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='results prevent auto date.csv' datatype='table' name='[__tableau_internal_object_id__].[results prevent auto date.csv_0076523A34394327B0A40513C6196FAD]' role='measure' type='quantitative' />
      <column caption='Basho (Results Prevent Auto Date.Csv)' datatype='string' name='[basho (results prevent auto date.csv)]' role='dimension' type='nominal' />
      <column caption='Basho-Id (Results Prevent Auto Date.Csv)' datatype='integer' name='[basho-id (results prevent auto date.csv)]' role='dimension' type='ordinal' />
      <column caption='Basho-Id' datatype='integer' name='[basho-id]' role='dimension' type='ordinal' />
      <column caption='Basho' datatype='string' name='[basho]' role='dimension' type='nominal' />
      <column caption='Birth Date' datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='integer' name='[day]' role='dimension' type='quantitative' />
      <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
      <column caption='Heya' datatype='string' name='[heya]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Finishing Move (Kimarite)' datatype='string' name='[kimarite]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;abisetaoshi&quot;' value='Backward Force Down (Abisetaoshi)' />
          <alias key='&quot;amiuchi&quot;' value='Fisherman&apos;s Throw' />
          <alias key='&quot;ashitori&quot;' value='Leg Pick (Ashitori)' />
          <alias key='&quot;chongake&quot;' value='Pulling Heel Hook' />
          <alias key='&quot;fumidashi&quot;' value='Accidental Step out' />
          <alias key='&quot;fusen&quot;' value='No Opponent' />
          <alias key='&quot;gasshohineri&quot;' value='Clasped Hand Twist Down' />
          <alias key='&quot;hansoku&quot;' value='Technical Foul' />
          <alias key='&quot;harimanage&quot;' value='Backward Belt Throw' />
          <alias key='&quot;hatakikomi&quot;' value='Slap Down' />
          <alias key='&quot;hikiotoshi&quot;' value='Hand Pull Downi' />
          <alias key='&quot;hikkake&quot;' value='Arm Grabbing Force Out' />
          <alias key='&quot;ipponzeoi&quot;' value='One-Armed Shoulder Throw' />
          <alias key='&quot;isamiashi&quot;' value='Accidental Step Out' />
          <alias key='&quot;izori&quot;' value='Backwards Body Drop' />
          <alias key='&quot;kainahineri&quot;' value='Two Handed Arm Twist Down' />
          <alias key='&quot;kakenage&quot;' value='Hooking Inner Thigh Throw (Kakenage)' />
          <alias key='&quot;katasukashi&quot;' value='Under Shoulder Swing Down' />
          <alias key='&quot;kawazugake&quot;' value='Hooking Backward Counter Throw' />
          <alias key='&quot;kekaeshi&quot;' value='Minor Inner Foot Sweep (Kekaeshi)' />
          <alias key='&quot;ketaguri&quot;' value='Pulling Inside Ankle Sweep' />
          <alias key='&quot;kimedashi&quot;' value='Arm-Barring Force Out (Kimedashi)' />
          <alias key='&quot;kimetaoshi&quot;' value='Arm-Barring Force Down' />
          <alias key='&quot;kirikaeshi&quot;' value='Twisting Backwards Knee Trip' />
          <alias key='&quot;komatasukui&quot;' value='Over Thigh Scooping Body Drop (Komatasukui)' />
          <alias key='&quot;koshikudake&quot;' value='Inadvertant Collapse' />
          <alias key='&quot;koshinage&quot;' value='Hip Throw' />
          <alias key='&quot;kotehineri&quot;' value='Armlock Twist Down' />
          <alias key='&quot;kotenage&quot;' value='Armlock Throw (Kotenage)' />
          <alias key='&quot;kozumatori&quot;' value='Ankle Pick' />
          <alias key='&quot;kubihineri&quot;' value='Head Twisting Throw' />
          <alias key='&quot;kubinage&quot;' value='Headlock Throw' />
          <alias key='&quot;makiotoshi&quot;' value='Twist Down' />
          <alias key='&quot;mitokorozeme&quot;' value='Triple Attack' />
          <alias key='&quot;nichonage&quot;' value='Body Drop Throw' />
          <alias key='&quot;nimaigeri&quot;' value='Ankle Kicking Twist Down' />
          <alias key='&quot;okuridashi&quot;' value='Rear Push Out' />
          <alias key='&quot;okurigake&quot;' value='Rear Leg Trip' />
          <alias key='&quot;okurihikiotoshi&quot;' value='Rear Pull Out' />
          <alias key='&quot;okurinage&quot;' value='Rear Throw Down' />
          <alias key='&quot;okuritaoshi&quot;' value='Rear Push Down' />
          <alias key='&quot;okuritsuridashi&quot;' value='Rear Lift Out' />
          <alias key='&quot;okuritsuriotoshi&quot;' value='Rear Lifting Body Slam' />
          <alias key='&quot;osakate&quot;' value='Backward Twisting Overarm Throw' />
          <alias key='&quot;oshidashi&quot;' value='Front Push Out (Oshidashi)' />
          <alias key='&quot;oshitaoshi&quot;' value='Front Push Down (Oshitaoshi)' />
          <alias key='&quot;sabaori&quot;' value='Forward Force Down' />
          <alias key='&quot;sakatottari&quot;' value='Arm Bar Throw Counter' />
          <alias key='&quot;shitatedashinage&quot;' value='Pulling Underarm Throw' />
          <alias key='&quot;shitatehineri&quot;' value='Twisting Underarm Throw (Shitatehineri)' />
          <alias key='&quot;shitatenage&quot;' value='Underarm Throw' />
          <alias key='&quot;sokubiotoshi&quot;' value='Head Chop Down' />
          <alias key='&quot;sotogake&quot;' value='Outside Leg Trip' />
          <alias key='&quot;sotokomata&quot;' value='Outside Scooping Body Drop' />
          <alias key='&quot;sotomuso&quot;' value='Outer Thigh Propping Twist Down' />
          <alias key='&quot;sukuinage&quot;' value='Beltless Arm Throw' />
          <alias key='&quot;susoharai&quot;' value='Rear Foot Sweep' />
          <alias key='&quot;susotori&quot;' value='Ankle Grab' />
          <alias key='&quot;tasukizori&quot;' value='Kimono-String Drop' />
          <alias key='&quot;tokkurinage&quot;' value='Two-Handed Head Twist Down' />
          <alias key='&quot;tottari&quot;' value='Arm Bar Throw' />
          <alias key='&quot;tsukidashi&quot;' value='Front Thrust Out (Tsukidashi)' />
          <alias key='&quot;tsukihiza&quot;' value='Accidental Knee Touch Down' />
          <alias key='&quot;tsukiotoshi&quot;' value='Thrust Down' />
          <alias key='&quot;tsukitaoshi&quot;' value='Front Thrust Down (Tsukitaoshi)' />
          <alias key='&quot;tsukite&quot;' value='Accidental Hand Touch Down' />
          <alias key='&quot;tsumatori&quot;' value='Rear Toe Pick' />
          <alias key='&quot;tsuridashi&quot;' value='Lift Out (Tsuridashi)' />
          <alias key='&quot;tsuriotoshi&quot;' value='Lifting Body Slam' />
          <alias key='&quot;tsutaezori&quot;' value='Under Arm Forward Body Drop' />
          <alias key='&quot;uchigake&quot;' value='Inside Leg Trip (Uchigake)' />
          <alias key='&quot;uchimuso&quot;' value='Inner Thigh Propping Twist Down' />
          <alias key='&quot;ushiromotare&quot;' value='Backward Lean Out' />
          <alias key='&quot;utchari&quot;' value='Backward Pivot Throw' />
          <alias key='&quot;uwatedashinage&quot;' value='Pulling Overarm Throw' />
          <alias key='&quot;uwatehineri&quot;' value='Twisting Overarm Throw' />
          <alias key='&quot;uwatenage&quot;' value='Overarm Throw (Uwatenage)' />
          <alias key='&quot;waridashi&quot;' value='Upper Arm Force Out' />
          <alias key='&quot;watashikomi&quot;' value='Thigh Grabbing Push Down' />
          <alias key='&quot;yaguranage&quot;' value='Inner Thigh Throw' />
          <alias key='&quot;yobimodoshi&quot;' value='Pulling Body Slam' />
          <alias key='&quot;yorikiri&quot;' value='Frontal Force Out' />
          <alias key='&quot;yoritaoshi&quot;' value='Frontal Crush Out' />
          <alias key='&quot;zubuneri&quot;' value='Head Pivot Throw' />
        </aliases>
      </column>
      <column caption='Prev' datatype='string' name='[prev]' role='dimension' type='nominal' />
      <column caption='Prev L' datatype='integer' name='[prev_l]' role='measure' type='quantitative' />
      <column caption='Prev W' datatype='integer' name='[prev_w]' role='measure' type='quantitative' />
      <column caption='Rank' datatype='string' name='[rank]' role='dimension' type='nominal' />
      <column caption='Rikishi1 Id' datatype='integer' name='[rikishi1_id]' role='dimension' type='ordinal' />
      <column caption='Rikishi1 Rank' datatype='string' name='[rikishi1_rank]' role='dimension' type='nominal' />
      <column caption='Rikishi1 Result' datatype='string' name='[rikishi1_result]' role='dimension' type='nominal' />
      <column caption='Rikishi1 Shikona' datatype='string' name='[rikishi1_shikona]' role='dimension' type='nominal' />
      <column caption='Rikishi1 Win' datatype='integer' name='[rikishi1_win]' role='measure' type='quantitative' />
      <column caption='Rikishi2 Id' datatype='integer' name='[rikishi2_id]' role='dimension' type='ordinal' />
      <column caption='Rikishi2 Rank' datatype='string' name='[rikishi2_rank]' role='dimension' type='nominal' />
      <column caption='Rikishi2 Result' datatype='string' name='[rikishi2_result]' role='dimension' type='nominal' />
      <column caption='Rikishi2 Shikona' datatype='string' name='[rikishi2_shikona]' role='dimension' type='nominal' />
      <column caption='Rikishi2 Win' datatype='integer' name='[rikishi2_win]' role='measure' type='quantitative' />
      <column caption='Rikishi' datatype='string' name='[rikishi]' role='dimension' type='nominal' />
      <column caption='Shusshin' datatype='string' name='[shusshin]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <column-instance column='[kimarite]' derivation='None' name='[none:kimarite:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:kimarite:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;kirikaeshi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;yorikiri&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kimedashi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;oshidashi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;abisetaoshi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;katasukashi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sotogake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;fusen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;shitatehineri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hikiotoshi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;uwatehineri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;oshitaoshi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;okuridashi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tsuridashi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;shitatenage&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tottari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;yoritaoshi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;tsukidashi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sukuinage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;okuritaoshi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;makiotoshi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;uwatedashinage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;kubinage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tsukitaoshi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kotenage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;shitatedashinage&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hatakikomi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;utchari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tsukiotoshi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;uwatenage&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='banzuke clean date.csv' id='banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B'>
            <properties context=''>
              <relation connection='textscan.0k3saem1qlprxe10jr1eu0etcdc1' name='banzuke clean date.csv' table='[banzuke clean date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='basho' ordinal='0' />
                  <column datatype='integer' name='id' ordinal='1' />
                  <column datatype='integer' name='basho-id' ordinal='2' />
                  <column datatype='string' name='rank' ordinal='3' />
                  <column datatype='string' name='rikishi' ordinal='4' />
                  <column datatype='string' name='heya' ordinal='5' />
                  <column datatype='string' name='shusshin' ordinal='6' />
                  <column datatype='date' name='birth_date' ordinal='7' />
                  <column datatype='real' name='height' ordinal='8' />
                  <column datatype='real' name='weight' ordinal='9' />
                  <column datatype='string' name='prev' ordinal='10' />
                  <column datatype='integer' name='prev_w' ordinal='11' />
                  <column datatype='integer' name='prev_l' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='results prevent auto date.csv' id='results prevent auto date.csv_0076523A34394327B0A40513C6196FAD'>
            <properties context=''>
              <relation connection='textscan.0k3saem1qlprxe10jr1eu0etcdc1' name='results prevent auto date.csv' table='[results prevent auto date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='basho' ordinal='0' />
                  <column datatype='integer' name='basho-id' ordinal='1' />
                  <column datatype='integer' name='day' ordinal='2' />
                  <column datatype='integer' name='rikishi1_id' ordinal='3' />
                  <column datatype='string' name='rikishi1_rank' ordinal='4' />
                  <column datatype='string' name='rikishi1_shikona' ordinal='5' />
                  <column datatype='string' name='rikishi1_result' ordinal='6' />
                  <column datatype='integer' name='rikishi1_win' ordinal='7' />
                  <column datatype='string' name='kimarite' ordinal='8' />
                  <column datatype='integer' name='rikishi2_id' ordinal='9' />
                  <column datatype='string' name='rikishi2_rank' ordinal='10' />
                  <column datatype='string' name='rikishi2_shikona' ordinal='11' />
                  <column datatype='string' name='rikishi2_result' ordinal='12' />
                  <column datatype='integer' name='rikishi2_win' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[basho-id]' />
              <expression op='[basho-id (results prevent auto date.csv)]' />
            </expression>
            <first-end-point object-id='banzuke clean date.csv_7639D560BC294DACBB6F801AB3790E3B' unique-key='true' />
            <second-end-point object-id='results prevent auto date.csv_0076523A34394327B0A40513C6196FAD' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Distribution of Height'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribution of Height</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Height Inches' datatype='real' name='[Calculation_299207927385010176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * .3937' />
            </column>
            <column aggregation='None' datatype='integer' name='[Height (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[height]' peg='0' size='1.85' />
            </column>
            <column aggregation='None' datatype='integer' name='[Height Inches (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[Calculation_299207927385010176]' peg='0' size='0.5' />
            </column>
            <column-instance column='[height]' derivation='Count' name='[cnt:height:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column-instance column='[Height (bin)]' derivation='None' name='[none:Height (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Height Inches (bin)]' derivation='None' name='[none:Height Inches (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:Height (bin):qk]' included-values='non-null' />
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:Height (bin):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1txduqb00yjjkq16jy8q0182i1nd].[cnt:height:qk]</rows>
        <cols>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:Height Inches (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:Height (bin):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{647313C3-964D-4A1F-946A-D6E29E06E3FC}' />
    </worksheet>
    <worksheet name='Distribution of Weight'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribution of Weight</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Weight Pounds' datatype='real' name='[Calculation_299207927389655041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 2.205' />
            </column>
            <column aggregation='None' datatype='integer' name='[Weight Pounds (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='1' formula='[Calculation_299207927389655041]' peg='0' size='14.7' />
            </column>
            <column-instance column='[Calculation_299207927389655041]' derivation='Count' name='[cnt:Calculation_299207927389655041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight Pounds (bin)]' derivation='None' name='[none:Weight Pounds (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1txduqb00yjjkq16jy8q0182i1nd].[cnt:Calculation_299207927389655041:qk]</rows>
        <cols>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:Weight Pounds (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[Weight Pounds (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{DB7BEE33-5520-4CDD-BFFA-AC4C40CECA86}' />
    </worksheet>
    <worksheet name='Finishing Moves Used by Heaviest Rikishi'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Finishing Moves Used by the Heaviest (Kimarite)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Weight Pounds' datatype='real' name='[Calculation_299207927389655041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 2.205' />
            </column>
            <column-instance column='[Calculation_299207927389655041]' derivation='Avg' name='[avg:Calculation_299207927389655041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='Avg' name='[avg:height:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column caption='Finishing Move (Kimarite)' datatype='string' name='[kimarite]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;abisetaoshi&quot;' value='Backward Force Down (Abisetaoshi)' />
                <alias key='&quot;amiuchi&quot;' value='Fisherman&apos;s Throw' />
                <alias key='&quot;ashitori&quot;' value='Leg Pick (Ashitori)' />
                <alias key='&quot;chongake&quot;' value='Pulling Heel Hook' />
                <alias key='&quot;fumidashi&quot;' value='Accidental Step out' />
                <alias key='&quot;fusen&quot;' value='No Opponent' />
                <alias key='&quot;gasshohineri&quot;' value='Clasped Hand Twist Down' />
                <alias key='&quot;hansoku&quot;' value='Technical Foul' />
                <alias key='&quot;harimanage&quot;' value='Backward Belt Throw' />
                <alias key='&quot;hatakikomi&quot;' value='Slap Down' />
                <alias key='&quot;hikiotoshi&quot;' value='Hand Pull Downi' />
                <alias key='&quot;hikkake&quot;' value='Arm Grabbing Force Out' />
                <alias key='&quot;ipponzeoi&quot;' value='One-Armed Shoulder Throw' />
                <alias key='&quot;isamiashi&quot;' value='Accidental Step Out' />
                <alias key='&quot;izori&quot;' value='Backwards Body Drop' />
                <alias key='&quot;kainahineri&quot;' value='Two Handed Arm Twist Down' />
                <alias key='&quot;kakenage&quot;' value='Hooking Inner Thigh Throw (Kakenage)' />
                <alias key='&quot;katasukashi&quot;' value='Under Shoulder Swing Down' />
                <alias key='&quot;kawazugake&quot;' value='Hooking Backward Counter Throw' />
                <alias key='&quot;kekaeshi&quot;' value='Minor Inner Foot Sweep (Kekaeshi)' />
                <alias key='&quot;ketaguri&quot;' value='Pulling Inside Ankle Sweep' />
                <alias key='&quot;kimedashi&quot;' value='Arm-Barring Force Out (Kimedashi)' />
                <alias key='&quot;kimetaoshi&quot;' value='Arm-Barring Force Down' />
                <alias key='&quot;kirikaeshi&quot;' value='Twisting Backwards Knee Trip' />
                <alias key='&quot;komatasukui&quot;' value='Over Thigh Scooping Body Drop (Komatasukui)' />
                <alias key='&quot;koshikudake&quot;' value='Inadvertant Collapse' />
                <alias key='&quot;koshinage&quot;' value='Hip Throw' />
                <alias key='&quot;kotehineri&quot;' value='Armlock Twist Down' />
                <alias key='&quot;kotenage&quot;' value='Armlock Throw (Kotenage)' />
                <alias key='&quot;kozumatori&quot;' value='Ankle Pick' />
                <alias key='&quot;kubihineri&quot;' value='Head Twisting Throw' />
                <alias key='&quot;kubinage&quot;' value='Headlock Throw' />
                <alias key='&quot;makiotoshi&quot;' value='Twist Down' />
                <alias key='&quot;mitokorozeme&quot;' value='Triple Attack' />
                <alias key='&quot;nichonage&quot;' value='Body Drop Throw' />
                <alias key='&quot;nimaigeri&quot;' value='Ankle Kicking Twist Down' />
                <alias key='&quot;okuridashi&quot;' value='Rear Push Out' />
                <alias key='&quot;okurigake&quot;' value='Rear Leg Trip' />
                <alias key='&quot;okurihikiotoshi&quot;' value='Rear Pull Out' />
                <alias key='&quot;okurinage&quot;' value='Rear Throw Down' />
                <alias key='&quot;okuritaoshi&quot;' value='Rear Push Down' />
                <alias key='&quot;okuritsuridashi&quot;' value='Rear Lift Out' />
                <alias key='&quot;okuritsuriotoshi&quot;' value='Rear Lifting Body Slam' />
                <alias key='&quot;osakate&quot;' value='Backward Twisting Overarm Throw' />
                <alias key='&quot;oshidashi&quot;' value='Front Push Out (Oshidashi)' />
                <alias key='&quot;oshitaoshi&quot;' value='Front Push Down (Oshitaoshi)' />
                <alias key='&quot;sabaori&quot;' value='Forward Force Down' />
                <alias key='&quot;sakatottari&quot;' value='Arm Bar Throw Counter' />
                <alias key='&quot;shitatedashinage&quot;' value='Pulling Underarm Throw' />
                <alias key='&quot;shitatehineri&quot;' value='Twisting Underarm Throw (Shitatehineri)' />
                <alias key='&quot;shitatenage&quot;' value='Underarm Throw' />
                <alias key='&quot;sokubiotoshi&quot;' value='Head Chop Down' />
                <alias key='&quot;sotogake&quot;' value='Outside Leg Trip' />
                <alias key='&quot;sotokomata&quot;' value='Outside Scooping Body Drop' />
                <alias key='&quot;sotomuso&quot;' value='Outer Thigh Propping Twist Down' />
                <alias key='&quot;sukuinage&quot;' value='Beltless Arm Throw' />
                <alias key='&quot;susoharai&quot;' value='Rear Foot Sweep' />
                <alias key='&quot;susotori&quot;' value='Ankle Grab' />
                <alias key='&quot;tasukizori&quot;' value='Kimono-String Drop' />
                <alias key='&quot;tokkurinage&quot;' value='Two-Handed Head Twist Down' />
                <alias key='&quot;tottari&quot;' value='Arm Bar Throw' />
                <alias key='&quot;tsukidashi&quot;' value='Front Thrust Out (Tsukidashi)' />
                <alias key='&quot;tsukihiza&quot;' value='Accidental Knee Touch Down' />
                <alias key='&quot;tsukiotoshi&quot;' value='Thrust Down' />
                <alias key='&quot;tsukitaoshi&quot;' value='Front Thrust Down (Tsukitaoshi)' />
                <alias key='&quot;tsukite&quot;' value='Accidental Hand Touch Down' />
                <alias key='&quot;tsumatori&quot;' value='Rear Toe Pick' />
                <alias key='&quot;tsuridashi&quot;' value='Lift Out (Tsuridashi)' />
                <alias key='&quot;tsuriotoshi&quot;' value='Lifting Body Slam' />
                <alias key='&quot;tsutaezori&quot;' value='Under Arm Forward Body Drop' />
                <alias key='&quot;uchigake&quot;' value='Inside Leg Trip (Uchigake)' />
                <alias key='&quot;uchimuso&quot;' value='Inner Thigh Propping Twist Down' />
                <alias key='&quot;ushiromotare&quot;' value='Backward Lean Out' />
                <alias key='&quot;utchari&quot;' value='Backward Pivot Throw' />
                <alias key='&quot;uwatedashinage&quot;' value='Pulling Overarm Throw' />
                <alias key='&quot;uwatehineri&quot;' value='Twisting Overarm Throw' />
                <alias key='&quot;uwatenage&quot;' value='Overarm Throw (Uwatenage)' />
                <alias key='&quot;waridashi&quot;' value='Upper Arm Force Out' />
                <alias key='&quot;watashikomi&quot;' value='Thigh Grabbing Push Down' />
                <alias key='&quot;yaguranage&quot;' value='Inner Thigh Throw' />
                <alias key='&quot;yobimodoshi&quot;' value='Pulling Body Slam' />
                <alias key='&quot;yorikiri&quot;' value='Frontal Force Out' />
                <alias key='&quot;yoritaoshi&quot;' value='Frontal Crush Out' />
                <alias key='&quot;zubuneri&quot;' value='Head Pivot Throw' />
              </aliases>
            </column>
            <column-instance column='[kimarite]' derivation='None' name='[none:kimarite:nk]' pivot='key' type='nominal' />
            <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' included-values='in-range'>
            <min>337.89999999999998</min>
          </filter>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]'>
            <groupfilter count='40' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([kimarite])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:kimarite:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' direction='DESC' using='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' />
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</column>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='34' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='12' />
            <format attr='text-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='center' />
            <format attr='vertical-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='center' />
            <format attr='text-format' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='324' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Lato' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E38ADECD-B870-4748-A680-3D664F45570D}' />
    </worksheet>
    <worksheet name='Finishing Moves Used by Lightest Rikishi'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Finishing Moves Used by the Lightest (Kimarite)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Weight Pounds' datatype='real' name='[Calculation_299207927389655041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 2.205' />
            </column>
            <column-instance column='[Calculation_299207927389655041]' derivation='Avg' name='[avg:Calculation_299207927389655041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='Avg' name='[avg:height:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column caption='Finishing Move (Kimarite)' datatype='string' name='[kimarite]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;abisetaoshi&quot;' value='Backward Force Down (Abisetaoshi)' />
                <alias key='&quot;amiuchi&quot;' value='Fisherman&apos;s Throw' />
                <alias key='&quot;ashitori&quot;' value='Leg Pick (Ashitori)' />
                <alias key='&quot;chongake&quot;' value='Pulling Heel Hook' />
                <alias key='&quot;fumidashi&quot;' value='Accidental Step out' />
                <alias key='&quot;fusen&quot;' value='No Opponent' />
                <alias key='&quot;gasshohineri&quot;' value='Clasped Hand Twist Down' />
                <alias key='&quot;hansoku&quot;' value='Technical Foul' />
                <alias key='&quot;harimanage&quot;' value='Backward Belt Throw' />
                <alias key='&quot;hatakikomi&quot;' value='Slap Down' />
                <alias key='&quot;hikiotoshi&quot;' value='Hand Pull Downi' />
                <alias key='&quot;hikkake&quot;' value='Arm Grabbing Force Out' />
                <alias key='&quot;ipponzeoi&quot;' value='One-Armed Shoulder Throw' />
                <alias key='&quot;isamiashi&quot;' value='Accidental Step Out' />
                <alias key='&quot;izori&quot;' value='Backwards Body Drop' />
                <alias key='&quot;kainahineri&quot;' value='Two Handed Arm Twist Down' />
                <alias key='&quot;kakenage&quot;' value='Hooking Inner Thigh Throw (Kakenage)' />
                <alias key='&quot;katasukashi&quot;' value='Under Shoulder Swing Down' />
                <alias key='&quot;kawazugake&quot;' value='Hooking Backward Counter Throw' />
                <alias key='&quot;kekaeshi&quot;' value='Minor Inner Foot Sweep (Kekaeshi)' />
                <alias key='&quot;ketaguri&quot;' value='Pulling Inside Ankle Sweep' />
                <alias key='&quot;kimedashi&quot;' value='Arm-Barring Force Out (Kimedashi)' />
                <alias key='&quot;kimetaoshi&quot;' value='Arm-Barring Force Down' />
                <alias key='&quot;kirikaeshi&quot;' value='Twisting Backwards Knee Trip' />
                <alias key='&quot;komatasukui&quot;' value='Over Thigh Scooping Body Drop (Komatasukui)' />
                <alias key='&quot;koshikudake&quot;' value='Inadvertant Collapse' />
                <alias key='&quot;koshinage&quot;' value='Hip Throw' />
                <alias key='&quot;kotehineri&quot;' value='Armlock Twist Down' />
                <alias key='&quot;kotenage&quot;' value='Armlock Throw (Kotenage)' />
                <alias key='&quot;kozumatori&quot;' value='Ankle Pick' />
                <alias key='&quot;kubihineri&quot;' value='Head Twisting Throw' />
                <alias key='&quot;kubinage&quot;' value='Headlock Throw' />
                <alias key='&quot;makiotoshi&quot;' value='Twist Down' />
                <alias key='&quot;mitokorozeme&quot;' value='Triple Attack' />
                <alias key='&quot;nichonage&quot;' value='Body Drop Throw' />
                <alias key='&quot;nimaigeri&quot;' value='Ankle Kicking Twist Down' />
                <alias key='&quot;okuridashi&quot;' value='Rear Push Out' />
                <alias key='&quot;okurigake&quot;' value='Rear Leg Trip' />
                <alias key='&quot;okurihikiotoshi&quot;' value='Rear Pull Out' />
                <alias key='&quot;okurinage&quot;' value='Rear Throw Down' />
                <alias key='&quot;okuritaoshi&quot;' value='Rear Push Down' />
                <alias key='&quot;okuritsuridashi&quot;' value='Rear Lift Out' />
                <alias key='&quot;okuritsuriotoshi&quot;' value='Rear Lifting Body Slam' />
                <alias key='&quot;osakate&quot;' value='Backward Twisting Overarm Throw' />
                <alias key='&quot;oshidashi&quot;' value='Front Push Out (Oshidashi)' />
                <alias key='&quot;oshitaoshi&quot;' value='Front Push Down (Oshitaoshi)' />
                <alias key='&quot;sabaori&quot;' value='Forward Force Down' />
                <alias key='&quot;sakatottari&quot;' value='Arm Bar Throw Counter' />
                <alias key='&quot;shitatedashinage&quot;' value='Pulling Underarm Throw' />
                <alias key='&quot;shitatehineri&quot;' value='Twisting Underarm Throw (Shitatehineri)' />
                <alias key='&quot;shitatenage&quot;' value='Underarm Throw' />
                <alias key='&quot;sokubiotoshi&quot;' value='Head Chop Down' />
                <alias key='&quot;sotogake&quot;' value='Outside Leg Trip' />
                <alias key='&quot;sotokomata&quot;' value='Outside Scooping Body Drop' />
                <alias key='&quot;sotomuso&quot;' value='Outer Thigh Propping Twist Down' />
                <alias key='&quot;sukuinage&quot;' value='Beltless Arm Throw' />
                <alias key='&quot;susoharai&quot;' value='Rear Foot Sweep' />
                <alias key='&quot;susotori&quot;' value='Ankle Grab' />
                <alias key='&quot;tasukizori&quot;' value='Kimono-String Drop' />
                <alias key='&quot;tokkurinage&quot;' value='Two-Handed Head Twist Down' />
                <alias key='&quot;tottari&quot;' value='Arm Bar Throw' />
                <alias key='&quot;tsukidashi&quot;' value='Front Thrust Out (Tsukidashi)' />
                <alias key='&quot;tsukihiza&quot;' value='Accidental Knee Touch Down' />
                <alias key='&quot;tsukiotoshi&quot;' value='Thrust Down' />
                <alias key='&quot;tsukitaoshi&quot;' value='Front Thrust Down (Tsukitaoshi)' />
                <alias key='&quot;tsukite&quot;' value='Accidental Hand Touch Down' />
                <alias key='&quot;tsumatori&quot;' value='Rear Toe Pick' />
                <alias key='&quot;tsuridashi&quot;' value='Lift Out (Tsuridashi)' />
                <alias key='&quot;tsuriotoshi&quot;' value='Lifting Body Slam' />
                <alias key='&quot;tsutaezori&quot;' value='Under Arm Forward Body Drop' />
                <alias key='&quot;uchigake&quot;' value='Inside Leg Trip (Uchigake)' />
                <alias key='&quot;uchimuso&quot;' value='Inner Thigh Propping Twist Down' />
                <alias key='&quot;ushiromotare&quot;' value='Backward Lean Out' />
                <alias key='&quot;utchari&quot;' value='Backward Pivot Throw' />
                <alias key='&quot;uwatedashinage&quot;' value='Pulling Overarm Throw' />
                <alias key='&quot;uwatehineri&quot;' value='Twisting Overarm Throw' />
                <alias key='&quot;uwatenage&quot;' value='Overarm Throw (Uwatenage)' />
                <alias key='&quot;waridashi&quot;' value='Upper Arm Force Out' />
                <alias key='&quot;watashikomi&quot;' value='Thigh Grabbing Push Down' />
                <alias key='&quot;yaguranage&quot;' value='Inner Thigh Throw' />
                <alias key='&quot;yobimodoshi&quot;' value='Pulling Body Slam' />
                <alias key='&quot;yorikiri&quot;' value='Frontal Force Out' />
                <alias key='&quot;yoritaoshi&quot;' value='Frontal Crush Out' />
                <alias key='&quot;zubuneri&quot;' value='Head Pivot Throw' />
              </aliases>
            </column>
            <column-instance column='[kimarite]' derivation='None' name='[none:kimarite:nk]' pivot='key' type='nominal' />
            <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' included-values='in-range'>
            <max>289.80000000000001</max>
          </filter>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]'>
            <groupfilter count='40' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([kimarite])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:kimarite:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' direction='DESC' using='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' />
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</column>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='34' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='12' />
            <format attr='text-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='center' />
            <format attr='vertical-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='412' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Lato' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E280FEC9-03CA-4C5D-A7C7-B173C4A5509B}' />
    </worksheet>
    <worksheet name='Finishing Moves Used by Shortest Rikishi'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Finishing Moves Used by the Shortest (Kimarite)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Height Inches' datatype='real' name='[Calculation_299207927385010176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * .3937' />
            </column>
            <column-instance column='[Calculation_299207927385010176]' derivation='Avg' name='[avg:Calculation_299207927385010176:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='Avg' name='[avg:height:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column caption='Finishing Move (Kimarite)' datatype='string' name='[kimarite]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;abisetaoshi&quot;' value='Backward Force Down (Abisetaoshi)' />
                <alias key='&quot;amiuchi&quot;' value='Fisherman&apos;s Throw' />
                <alias key='&quot;ashitori&quot;' value='Leg Pick (Ashitori)' />
                <alias key='&quot;chongake&quot;' value='Pulling Heel Hook' />
                <alias key='&quot;fumidashi&quot;' value='Accidental Step out' />
                <alias key='&quot;fusen&quot;' value='No Opponent' />
                <alias key='&quot;gasshohineri&quot;' value='Clasped Hand Twist Down' />
                <alias key='&quot;hansoku&quot;' value='Technical Foul' />
                <alias key='&quot;harimanage&quot;' value='Backward Belt Throw' />
                <alias key='&quot;hatakikomi&quot;' value='Slap Down' />
                <alias key='&quot;hikiotoshi&quot;' value='Hand Pull Downi' />
                <alias key='&quot;hikkake&quot;' value='Arm Grabbing Force Out' />
                <alias key='&quot;ipponzeoi&quot;' value='One-Armed Shoulder Throw' />
                <alias key='&quot;isamiashi&quot;' value='Accidental Step Out' />
                <alias key='&quot;izori&quot;' value='Backwards Body Drop' />
                <alias key='&quot;kainahineri&quot;' value='Two Handed Arm Twist Down' />
                <alias key='&quot;kakenage&quot;' value='Hooking Inner Thigh Throw (Kakenage)' />
                <alias key='&quot;katasukashi&quot;' value='Under Shoulder Swing Down' />
                <alias key='&quot;kawazugake&quot;' value='Hooking Backward Counter Throw' />
                <alias key='&quot;kekaeshi&quot;' value='Minor Inner Foot Sweep (Kekaeshi)' />
                <alias key='&quot;ketaguri&quot;' value='Pulling Inside Ankle Sweep' />
                <alias key='&quot;kimedashi&quot;' value='Arm-Barring Force Out (Kimedashi)' />
                <alias key='&quot;kimetaoshi&quot;' value='Arm-Barring Force Down' />
                <alias key='&quot;kirikaeshi&quot;' value='Twisting Backwards Knee Trip' />
                <alias key='&quot;komatasukui&quot;' value='Over Thigh Scooping Body Drop (Komatasukui)' />
                <alias key='&quot;koshikudake&quot;' value='Inadvertant Collapse' />
                <alias key='&quot;koshinage&quot;' value='Hip Throw' />
                <alias key='&quot;kotehineri&quot;' value='Armlock Twist Down' />
                <alias key='&quot;kotenage&quot;' value='Armlock Throw (Kotenage)' />
                <alias key='&quot;kozumatori&quot;' value='Ankle Pick' />
                <alias key='&quot;kubihineri&quot;' value='Head Twisting Throw' />
                <alias key='&quot;kubinage&quot;' value='Headlock Throw' />
                <alias key='&quot;makiotoshi&quot;' value='Twist Down' />
                <alias key='&quot;mitokorozeme&quot;' value='Triple Attack' />
                <alias key='&quot;nichonage&quot;' value='Body Drop Throw' />
                <alias key='&quot;nimaigeri&quot;' value='Ankle Kicking Twist Down' />
                <alias key='&quot;okuridashi&quot;' value='Rear Push Out' />
                <alias key='&quot;okurigake&quot;' value='Rear Leg Trip' />
                <alias key='&quot;okurihikiotoshi&quot;' value='Rear Pull Out' />
                <alias key='&quot;okurinage&quot;' value='Rear Throw Down' />
                <alias key='&quot;okuritaoshi&quot;' value='Rear Push Down' />
                <alias key='&quot;okuritsuridashi&quot;' value='Rear Lift Out' />
                <alias key='&quot;okuritsuriotoshi&quot;' value='Rear Lifting Body Slam' />
                <alias key='&quot;osakate&quot;' value='Backward Twisting Overarm Throw' />
                <alias key='&quot;oshidashi&quot;' value='Front Push Out (Oshidashi)' />
                <alias key='&quot;oshitaoshi&quot;' value='Front Push Down (Oshitaoshi)' />
                <alias key='&quot;sabaori&quot;' value='Forward Force Down' />
                <alias key='&quot;sakatottari&quot;' value='Arm Bar Throw Counter' />
                <alias key='&quot;shitatedashinage&quot;' value='Pulling Underarm Throw' />
                <alias key='&quot;shitatehineri&quot;' value='Twisting Underarm Throw (Shitatehineri)' />
                <alias key='&quot;shitatenage&quot;' value='Underarm Throw' />
                <alias key='&quot;sokubiotoshi&quot;' value='Head Chop Down' />
                <alias key='&quot;sotogake&quot;' value='Outside Leg Trip' />
                <alias key='&quot;sotokomata&quot;' value='Outside Scooping Body Drop' />
                <alias key='&quot;sotomuso&quot;' value='Outer Thigh Propping Twist Down' />
                <alias key='&quot;sukuinage&quot;' value='Beltless Arm Throw' />
                <alias key='&quot;susoharai&quot;' value='Rear Foot Sweep' />
                <alias key='&quot;susotori&quot;' value='Ankle Grab' />
                <alias key='&quot;tasukizori&quot;' value='Kimono-String Drop' />
                <alias key='&quot;tokkurinage&quot;' value='Two-Handed Head Twist Down' />
                <alias key='&quot;tottari&quot;' value='Arm Bar Throw' />
                <alias key='&quot;tsukidashi&quot;' value='Front Thrust Out (Tsukidashi)' />
                <alias key='&quot;tsukihiza&quot;' value='Accidental Knee Touch Down' />
                <alias key='&quot;tsukiotoshi&quot;' value='Thrust Down' />
                <alias key='&quot;tsukitaoshi&quot;' value='Front Thrust Down (Tsukitaoshi)' />
                <alias key='&quot;tsukite&quot;' value='Accidental Hand Touch Down' />
                <alias key='&quot;tsumatori&quot;' value='Rear Toe Pick' />
                <alias key='&quot;tsuridashi&quot;' value='Lift Out (Tsuridashi)' />
                <alias key='&quot;tsuriotoshi&quot;' value='Lifting Body Slam' />
                <alias key='&quot;tsutaezori&quot;' value='Under Arm Forward Body Drop' />
                <alias key='&quot;uchigake&quot;' value='Inside Leg Trip (Uchigake)' />
                <alias key='&quot;uchimuso&quot;' value='Inner Thigh Propping Twist Down' />
                <alias key='&quot;ushiromotare&quot;' value='Backward Lean Out' />
                <alias key='&quot;utchari&quot;' value='Backward Pivot Throw' />
                <alias key='&quot;uwatedashinage&quot;' value='Pulling Overarm Throw' />
                <alias key='&quot;uwatehineri&quot;' value='Twisting Overarm Throw' />
                <alias key='&quot;uwatenage&quot;' value='Overarm Throw (Uwatenage)' />
                <alias key='&quot;waridashi&quot;' value='Upper Arm Force Out' />
                <alias key='&quot;watashikomi&quot;' value='Thigh Grabbing Push Down' />
                <alias key='&quot;yaguranage&quot;' value='Inner Thigh Throw' />
                <alias key='&quot;yobimodoshi&quot;' value='Pulling Body Slam' />
                <alias key='&quot;yorikiri&quot;' value='Frontal Force Out' />
                <alias key='&quot;yoritaoshi&quot;' value='Frontal Crush Out' />
                <alias key='&quot;zubuneri&quot;' value='Head Pivot Throw' />
              </aliases>
            </column>
            <column-instance column='[kimarite]' derivation='None' name='[none:kimarite:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' included-values='in-range'>
            <max>181.37</max>
          </filter>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]'>
            <groupfilter count='40' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([kimarite])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:kimarite:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' direction='DESC' using='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' />
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</column>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='34' />
            <format attr='text-format' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='404' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Lato' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{77A5588A-4C06-41EB-8AB3-D0F42239F8DD}' />
    </worksheet>
    <worksheet name='Finishing Moves Used by Tallest Rikishi'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Finishing Moves Used by the Tallest (Kimarite)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Height Inches' datatype='real' name='[Calculation_299207927385010176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * .3937' />
            </column>
            <column-instance column='[Calculation_299207927385010176]' derivation='Avg' name='[avg:Calculation_299207927385010176:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='Avg' name='[avg:height:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column caption='Finishing Move (Kimarite)' datatype='string' name='[kimarite]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;abisetaoshi&quot;' value='Backward Force Down (Abisetaoshi)' />
                <alias key='&quot;amiuchi&quot;' value='Fisherman&apos;s Throw' />
                <alias key='&quot;ashitori&quot;' value='Leg Pick (Ashitori)' />
                <alias key='&quot;chongake&quot;' value='Pulling Heel Hook' />
                <alias key='&quot;fumidashi&quot;' value='Accidental Step out' />
                <alias key='&quot;fusen&quot;' value='No Opponent' />
                <alias key='&quot;gasshohineri&quot;' value='Clasped Hand Twist Down' />
                <alias key='&quot;hansoku&quot;' value='Technical Foul' />
                <alias key='&quot;harimanage&quot;' value='Backward Belt Throw' />
                <alias key='&quot;hatakikomi&quot;' value='Slap Down' />
                <alias key='&quot;hikiotoshi&quot;' value='Hand Pull Downi' />
                <alias key='&quot;hikkake&quot;' value='Arm Grabbing Force Out' />
                <alias key='&quot;ipponzeoi&quot;' value='One-Armed Shoulder Throw' />
                <alias key='&quot;isamiashi&quot;' value='Accidental Step Out' />
                <alias key='&quot;izori&quot;' value='Backwards Body Drop' />
                <alias key='&quot;kainahineri&quot;' value='Two Handed Arm Twist Down' />
                <alias key='&quot;kakenage&quot;' value='Hooking Inner Thigh Throw (Kakenage)' />
                <alias key='&quot;katasukashi&quot;' value='Under Shoulder Swing Down' />
                <alias key='&quot;kawazugake&quot;' value='Hooking Backward Counter Throw' />
                <alias key='&quot;kekaeshi&quot;' value='Minor Inner Foot Sweep (Kekaeshi)' />
                <alias key='&quot;ketaguri&quot;' value='Pulling Inside Ankle Sweep' />
                <alias key='&quot;kimedashi&quot;' value='Arm-Barring Force Out (Kimedashi)' />
                <alias key='&quot;kimetaoshi&quot;' value='Arm-Barring Force Down' />
                <alias key='&quot;kirikaeshi&quot;' value='Twisting Backwards Knee Trip' />
                <alias key='&quot;komatasukui&quot;' value='Over Thigh Scooping Body Drop (Komatasukui)' />
                <alias key='&quot;koshikudake&quot;' value='Inadvertant Collapse' />
                <alias key='&quot;koshinage&quot;' value='Hip Throw' />
                <alias key='&quot;kotehineri&quot;' value='Armlock Twist Down' />
                <alias key='&quot;kotenage&quot;' value='Armlock Throw (Kotenage)' />
                <alias key='&quot;kozumatori&quot;' value='Ankle Pick' />
                <alias key='&quot;kubihineri&quot;' value='Head Twisting Throw' />
                <alias key='&quot;kubinage&quot;' value='Headlock Throw' />
                <alias key='&quot;makiotoshi&quot;' value='Twist Down' />
                <alias key='&quot;mitokorozeme&quot;' value='Triple Attack' />
                <alias key='&quot;nichonage&quot;' value='Body Drop Throw' />
                <alias key='&quot;nimaigeri&quot;' value='Ankle Kicking Twist Down' />
                <alias key='&quot;okuridashi&quot;' value='Rear Push Out' />
                <alias key='&quot;okurigake&quot;' value='Rear Leg Trip' />
                <alias key='&quot;okurihikiotoshi&quot;' value='Rear Pull Out' />
                <alias key='&quot;okurinage&quot;' value='Rear Throw Down' />
                <alias key='&quot;okuritaoshi&quot;' value='Rear Push Down' />
                <alias key='&quot;okuritsuridashi&quot;' value='Rear Lift Out' />
                <alias key='&quot;okuritsuriotoshi&quot;' value='Rear Lifting Body Slam' />
                <alias key='&quot;osakate&quot;' value='Backward Twisting Overarm Throw' />
                <alias key='&quot;oshidashi&quot;' value='Front Push Out (Oshidashi)' />
                <alias key='&quot;oshitaoshi&quot;' value='Front Push Down (Oshitaoshi)' />
                <alias key='&quot;sabaori&quot;' value='Forward Force Down' />
                <alias key='&quot;sakatottari&quot;' value='Arm Bar Throw Counter' />
                <alias key='&quot;shitatedashinage&quot;' value='Pulling Underarm Throw' />
                <alias key='&quot;shitatehineri&quot;' value='Twisting Underarm Throw (Shitatehineri)' />
                <alias key='&quot;shitatenage&quot;' value='Underarm Throw' />
                <alias key='&quot;sokubiotoshi&quot;' value='Head Chop Down' />
                <alias key='&quot;sotogake&quot;' value='Outside Leg Trip' />
                <alias key='&quot;sotokomata&quot;' value='Outside Scooping Body Drop' />
                <alias key='&quot;sotomuso&quot;' value='Outer Thigh Propping Twist Down' />
                <alias key='&quot;sukuinage&quot;' value='Beltless Arm Throw' />
                <alias key='&quot;susoharai&quot;' value='Rear Foot Sweep' />
                <alias key='&quot;susotori&quot;' value='Ankle Grab' />
                <alias key='&quot;tasukizori&quot;' value='Kimono-String Drop' />
                <alias key='&quot;tokkurinage&quot;' value='Two-Handed Head Twist Down' />
                <alias key='&quot;tottari&quot;' value='Arm Bar Throw' />
                <alias key='&quot;tsukidashi&quot;' value='Front Thrust Out (Tsukidashi)' />
                <alias key='&quot;tsukihiza&quot;' value='Accidental Knee Touch Down' />
                <alias key='&quot;tsukiotoshi&quot;' value='Thrust Down' />
                <alias key='&quot;tsukitaoshi&quot;' value='Front Thrust Down (Tsukitaoshi)' />
                <alias key='&quot;tsukite&quot;' value='Accidental Hand Touch Down' />
                <alias key='&quot;tsumatori&quot;' value='Rear Toe Pick' />
                <alias key='&quot;tsuridashi&quot;' value='Lift Out (Tsuridashi)' />
                <alias key='&quot;tsuriotoshi&quot;' value='Lifting Body Slam' />
                <alias key='&quot;tsutaezori&quot;' value='Under Arm Forward Body Drop' />
                <alias key='&quot;uchigake&quot;' value='Inside Leg Trip (Uchigake)' />
                <alias key='&quot;uchimuso&quot;' value='Inner Thigh Propping Twist Down' />
                <alias key='&quot;ushiromotare&quot;' value='Backward Lean Out' />
                <alias key='&quot;utchari&quot;' value='Backward Pivot Throw' />
                <alias key='&quot;uwatedashinage&quot;' value='Pulling Overarm Throw' />
                <alias key='&quot;uwatehineri&quot;' value='Twisting Overarm Throw' />
                <alias key='&quot;uwatenage&quot;' value='Overarm Throw (Uwatenage)' />
                <alias key='&quot;waridashi&quot;' value='Upper Arm Force Out' />
                <alias key='&quot;watashikomi&quot;' value='Thigh Grabbing Push Down' />
                <alias key='&quot;yaguranage&quot;' value='Inner Thigh Throw' />
                <alias key='&quot;yobimodoshi&quot;' value='Pulling Body Slam' />
                <alias key='&quot;yorikiri&quot;' value='Frontal Force Out' />
                <alias key='&quot;yoritaoshi&quot;' value='Frontal Crush Out' />
                <alias key='&quot;zubuneri&quot;' value='Head Pivot Throw' />
              </aliases>
            </column>
            <column-instance column='[kimarite]' derivation='None' name='[none:kimarite:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' included-values='in-range'>
            <min>185.16</min>
          </filter>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]'>
            <groupfilter count='40' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([kimarite])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:kimarite:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' direction='DESC' using='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' />
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</column>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='34' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='12' />
            <format attr='text-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='center' />
            <format attr='vertical-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='center' />
            <format attr='text-format' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]' value='312' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:height:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Lato' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:kimarite:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A0FDC382-30BC-4225-A0A1-D9E032300B07}' />
    </worksheet>
    <worksheet name='Height Amateur Card'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Average Height in Inches (Amateur)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Height Inches' datatype='real' name='[Calculation_299207927385010176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * .3937' />
            </column>
            <column-instance column='[Calculation_299207927385010176]' derivation='Avg' name='[avg:Calculation_299207927385010176:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column-instance column='[rank]' derivation='None' name='[none:rank:nk]' pivot='key' type='nominal' />
            <column caption='Rank' datatype='string' name='[rank]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rank:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M18e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1wYO&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2wHD&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='vertical-align' data-class='total' value='center' />
            <format attr='wrap' data-class='total' value='off' />
            <format attr='text-orientation' data-class='total' value='0' />
            <format attr='text-align' value='center' />
            <format attr='text-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='center' />
            <format attr='font-family' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='Lato' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='20' />
            <format attr='vertical-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' value='20' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='9' />
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='Lato' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='20' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4FD3D0AB-ED8F-4A58-BC5A-5AB8A5B8DAB4}' />
    </worksheet>
    <worksheet name='Height Pro Card'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Average Height in Inches (Pro)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Height Inches' datatype='real' name='[Calculation_299207927385010176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * .3937' />
            </column>
            <column-instance column='[Calculation_299207927385010176]' derivation='Avg' name='[avg:Calculation_299207927385010176:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column-instance column='[rank]' derivation='None' name='[none:rank:nk]' pivot='key' type='nominal' />
            <column caption='Rank' datatype='string' name='[rank]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M18e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1wYO&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2wHD&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='vertical-align' data-class='total' value='center' />
            <format attr='wrap' data-class='total' value='off' />
            <format attr='text-orientation' data-class='total' value='0' />
            <format attr='text-align' value='center' />
            <format attr='text-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='center' />
            <format attr='font-family' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='Lato' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='20' />
            <format attr='vertical-align' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' value='20' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='9' />
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='Lato' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' value='20' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{73EE8FB9-6B58-4A04-BF8F-FA901C95D228}' />
    </worksheet>
    <worksheet name='Height Vs Weight'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Height Versus Weight</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Height Inches' datatype='real' name='[Calculation_299207927385010176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * .3937' />
            </column>
            <column caption='Weight Pounds' datatype='real' name='[Calculation_299207927389655041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 2.205' />
            </column>
            <column-instance column='[Calculation_299207927385010176]' derivation='Avg' name='[avg:Calculation_299207927385010176:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_299207927389655041]' derivation='Avg' name='[avg:Calculation_299207927389655041:qk]' pivot='key' type='quantitative' />
            <column caption='Height' datatype='real' name='[height]' role='measure' type='quantitative' />
            <column-instance column='[rikishi]' derivation='None' name='[none:rikishi:nk]' pivot='key' type='nominal' />
            <column caption='Rikishi' datatype='string' name='[rikishi]' role='dimension' type='nominal' />
            <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]' field-type='quantitative' max='85.0' min='50.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' field-type='quantitative' max='575.0' min='100.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rikishi:nk]' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rikishi:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927385010176:qk]</rows>
        <cols>[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]</cols>
      </table>
      <simple-id uuid='{3F52D114-2C08-4E78-821B-EC0DE6F92636}' />
    </worksheet>
    <worksheet name='Weight Amateur Card'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Average Weight in Pounds (Amateur)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Weight Pounds' datatype='real' name='[Calculation_299207927389655041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 2.205' />
            </column>
            <column-instance column='[Calculation_299207927389655041]' derivation='Avg' name='[avg:Calculation_299207927389655041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rank]' derivation='None' name='[none:rank:nk]' pivot='key' type='nominal' />
            <column caption='Rank' datatype='string' name='[rank]' role='dimension' type='nominal' />
            <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rank:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M18e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2wHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1wYO&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2e&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2eHD&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2w&quot;' />
                <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2wHD&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='vertical-align' data-class='total' value='center' />
            <format attr='wrap' data-class='total' value='off' />
            <format attr='text-orientation' data-class='total' value='0' />
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' value='20' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='9' />
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{35920D1C-01E8-4D0D-A694-95992A45EB5D}' />
    </worksheet>
    <worksheet name='Weight Pro Card'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Average Weight in Pounds (Pro)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='banzuke clean date+' name='federated.1txduqb00yjjkq16jy8q0182i1nd' />
          </datasources>
          <datasource-dependencies datasource='federated.1txduqb00yjjkq16jy8q0182i1nd'>
            <column caption='Weight Pounds' datatype='real' name='[Calculation_299207927389655041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 2.205' />
            </column>
            <column-instance column='[Calculation_299207927389655041]' derivation='Avg' name='[avg:Calculation_299207927389655041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rank]' derivation='None' name='[none:rank:nk]' pivot='key' type='nominal' />
            <column caption='Rank' datatype='string' name='[rank]' role='dimension' type='nominal' />
            <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J10w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J11w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J12w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J13w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J14w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J3w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J4w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J5w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J6w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J7w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J8w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;J9w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;K2wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M10w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M11w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M12w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M13w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M14w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M15w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M16w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M17w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M18e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M3w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M4w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M5w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M6w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M7w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M8w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;M9w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O2wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;O3wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;S2wHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y1wYO&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2e&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2eHD&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2w&quot;' />
              <groupfilter function='member' level='[none:rank:nk]' member='&quot;Y2wHD&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='vertical-align' data-class='total' value='center' />
            <format attr='wrap' data-class='total' value='off' />
            <format attr='text-orientation' data-class='total' value='0' />
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' value='20' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' value='20' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='9' />
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='font-size' scope='cols' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Lato' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Lato' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Lato' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1txduqb00yjjkq16jy8q0182i1nd].[avg:Calculation_299207927389655041:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{82AB9382-1856-44EB-88DC-FD7E37CF2703}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ashitori'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' forceUpdate='' h='98000' id='3' param='https://youtu.be/1k0TQY8nLS8?t=117' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='16' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' fixed-size='280' forceUpdate='' h='98000' id='3' is-fixed='true' param='https://youtu.be/1k0TQY8nLS8?t=117' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9DA6F6D8-E9B6-4BC5-8103-C508E6D3CEA7}' />
    </dashboard>
    <dashboard name='Height Dashboard'>
      <style>
        <style-rule element='dash-title'>
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='11' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='63' h='8875' id='3' is-fixed='true' name='Height Pro Card' w='98400' x='800' y='1000'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='8750' id='7' is-fixed='true' name='Height Amateur Card' w='98400' x='800' y='9875'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='227' h='28375' id='18' is-fixed='true' param='horz' w='98400' x='800' y='18625'>
                  <zone fixed-size='496' h='28375' id='19' is-fixed='true' name='Finishing Moves Used by Tallest Rikishi' w='49200' x='800' y='18625'>
                    <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#818b91' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='879' h='28375' id='20' is-fixed='true' name='Finishing Moves Used by Shortest Rikishi' w='49200' x='50000' y='18625'>
                    <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#818b91' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='944' h='52000' id='17' is-fixed='true' name='Distribution of Height' w='98400' x='800' y='47000'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='34' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='33' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='61' h='8875' id='3' is-fixed='true' name='Height Pro Card' w='98400' x='800' y='1000'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='60' h='8750' id='7' is-fixed='true' name='Height Amateur Card' w='98400' x='800' y='9875'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28375' id='19' is-fixed='true' name='Finishing Moves Used by Tallest Rikishi' w='49200' x='800' y='18625'>
                  <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28375' id='20' is-fixed='true' name='Finishing Moves Used by Shortest Rikishi' w='49200' x='50000' y='18625'>
                  <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52000' id='17' is-fixed='true' name='Distribution of Height' w='98400' x='800' y='47000'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{53D1756C-E2D2-4E47-A6F6-4A681BB02B06}' />
    </dashboard>
    <dashboard name='HvW Dash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone h='98000' id='3' name='Height Vs Weight' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='21000' id='5' is-scaled='1' param='C:/Users/Kyle/Downloads/enho.jpg' w='8400' x='18100' y='59875' />
        <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='23625' id='6' is-centered='0' is-scaled='1' param='C:/Users/Kyle/Downloads/akebono.jpg' w='13100' x='77100' y='1750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='18' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='17' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Height Vs Weight' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='189' h='23625' id='6' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Kyle/Downloads/akebono.jpg' w='13100' x='77100' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='168' h='21000' id='5' is-fixed='true' is-scaled='1' param='C:/Users/Kyle/Downloads/enho.jpg' w='8400' x='18100' y='59875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{18544D62-6810-433A-B8E5-829C4BD3F5DD}' />
    </dashboard>
    <dashboard name='Kimedashi'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' forceUpdate='' h='98000' id='3' param='https://youtu.be/HLVifkX3u7M?t=14' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='16' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' fixed-size='280' forceUpdate='' h='98000' id='3' is-fixed='true' param='https://youtu.be/HLVifkX3u7M?t=14' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{078974BF-E58E-4200-86F3-7EA566774320}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='87863' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='11307'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Height of Sumo Wrestlers&#9;' captured-sheet='Height Dashboard' id='2' />
                  <story-point caption='Kimedashi Example&#9;' captured-sheet='Kimedashi' id='3' />
                  <story-point caption='Ashitori Example' captured-sheet='Ashitori' id='7' />
                  <story-point caption='Weight of Sumo Wrestlers' captured-sheet='Weight Dashboard' id='4' />
                  <story-point caption='Height Vs. Weight' captured-sheet='HvW Dash' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3001F5C6-8091-496B-8A41-3D2AD7307773}' />
    </dashboard>
    <dashboard name='Weight Dashboard'>
      <style>
        <style-rule element='dash-title'>
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='11' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone h='8750' id='26' name='Weight Pro Card' w='98400' x='800' y='1000'>
                  <layout-cache fixed-size-h='62' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8750' id='27' name='Weight Amateur Card' w='98400' x='800' y='9750'>
                  <layout-cache fixed-size-h='62' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='227' h='28375' id='18' is-fixed='true' layout-strategy-id='distribute-evenly' param='horz' w='98400' x='800' y='18500'>
                  <zone fixed-size='667' h='28375' id='25' is-fixed='true' name='Finishing Moves Used by Heaviest Rikishi' w='49200' x='800' y='18500'>
                    <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#818b91' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='635' h='28375' id='24' is-fixed='true' name='Finishing Moves Used by Lightest Rikishi' w='49200' x='50000' y='18500'>
                    <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#818b91' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='52125' id='23' name='Distribution of Weight' w='98400' x='800' y='46875'>
                  <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='39' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='38' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='60' h='8750' id='26' is-fixed='true' name='Weight Pro Card' w='98400' x='800' y='1000'>
                  <layout-cache fixed-size-h='62' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='60' h='8750' id='27' is-fixed='true' name='Weight Amateur Card' w='98400' x='800' y='9750'>
                  <layout-cache fixed-size-h='62' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28375' id='25' is-fixed='true' name='Finishing Moves Used by Heaviest Rikishi' w='49200' x='800' y='18500'>
                  <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28375' id='24' is-fixed='true' name='Finishing Moves Used by Lightest Rikishi' w='49200' x='50000' y='18500'>
                  <layout-cache fixed-size-h='206' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52125' id='23' is-fixed='true' name='Distribution of Weight' w='98400' x='800' y='46875'>
                  <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#818b91' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{10A36B34-8950-4EF2-A0C4-90996F3979AD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Finishing Moves Used by Tallest Rikishi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{06E8C34B-CE5A-421B-BA1A-62AEECE7AAE3}' />
    </window>
    <window class='worksheet' name='Finishing Moves Used by Heaviest Rikishi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4F77396C-A713-48DA-8776-AC842EA83DC2}' />
    </window>
    <window class='worksheet' name='Finishing Moves Used by Lightest Rikishi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DF6C63B9-FC1F-4ECF-9913-AE3D194BB521}' />
    </window>
    <window class='worksheet' name='Finishing Moves Used by Shortest Rikishi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{680CACCA-24CA-4460-AD88-698C4D78AAF4}' />
    </window>
    <window class='worksheet' name='Height Pro Card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C7074447-9869-499F-A7F4-CE62EC48A328}' />
    </window>
    <window class='worksheet' name='Height Amateur Card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A6AB8E1F-7C74-45CA-B9FE-4A4644FCBC09}' />
    </window>
    <window class='worksheet' name='Weight Pro Card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8CF94DC0-E720-4BD1-B494-C2761282BDBB}' />
    </window>
    <window class='worksheet' name='Weight Amateur Card'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{29F9A3A9-994C-410C-9E92-AAA4A4654E49}' />
    </window>
    <window class='worksheet' name='Distribution of Height'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4A98BACE-650C-4EB1-8A0B-66AD036FDEFA}' />
    </window>
    <window class='worksheet' name='Distribution of Weight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A6E26BE0-C030-4AC8-8F09-112190F3C5F9}' />
    </window>
    <window class='dashboard' name='Height Dashboard'>
      <viewpoints>
        <viewpoint name='Distribution of Height'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Finishing Moves Used by Shortest Rikishi'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Finishing Moves Used by Tallest Rikishi'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Height Amateur Card'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Height Pro Card'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{2A1E4E04-B189-46E3-9BAB-526D888B2609}' />
    </window>
    <window class='dashboard' name='Weight Dashboard'>
      <viewpoints>
        <viewpoint name='Distribution of Weight'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Finishing Moves Used by Heaviest Rikishi'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Finishing Moves Used by Lightest Rikishi'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weight Amateur Card'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Weight Pro Card'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3C8615DE-4EA8-41C0-B6A9-B5F17BE5345D}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{189F1EB0-DB6A-4728-AFA9-0082915611A5}' />
    </window>
    <window class='dashboard' name='Kimedashi'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{FBA7039F-3D4E-40AB-95EA-A749F801471C}' />
    </window>
    <window class='dashboard' name='Ashitori'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{F559E630-0660-406B-88C8-C5E47F797017}' />
    </window>
    <window class='worksheet' maximized='true' name='Height Vs Weight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:Height Inches (bin):qk]</field>
            <field>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rank:nk]</field>
            <field>[federated.1txduqb00yjjkq16jy8q0182i1nd].[none:rikishi:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93F138DE-1FD4-4FE0-9A53-6F7607D84C44}' />
    </window>
    <window class='dashboard' name='HvW Dash'>
      <viewpoints>
        <viewpoint name='Height Vs Weight'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{212DFF02-EFE1-40ED-819A-5BDD60639D48}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Ashitori' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACN0lEQVR4nO3WsQ0CMRBFQYM4dwAB/RdGgGjDpNDAOXgz2WY/edJe1lprQNR19wDYSQCk
      3X6Pz/s1jjl3bYHT/QVwzDnuj+euLXA6LxBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKR9AV9KCJG6PCmVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Distribution of Height' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distribution of Weight' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='174' name='Finishing Moves Used by Heaviest Rikishi' width='192'>
      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
      IxiAQJ3m/wFT2d9klJvdkAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='174' name='Finishing Moves Used by Lightest Rikishi' width='192'>
      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
      oE7z//n9+QsG1AP4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='174' name='Finishing Moves Used by Shortest Rikishi' width='192'>
      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
    </thumbnail>
    <thumbnail height='174' name='Finishing Moves Used by Tallest Rikishi' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Height Dashboard' width='192'>
      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
      dnu5z139AhijdKbH4kUQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Height Vs Weight' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HvW Dash' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Add3bn++numyPuxUXOkQBBgpkUgyIpSpqRR5oZjz2SZXkcyuGVy29r
      n73hVa1D7e579rp212Wv99W6vA6SrBmPZjwajUaiSFGixBxAEiAIIueLdHFzDt39/mjcK4AE
      KZJDzkgivlUsAhfdv+7bfc7vd8L3nJ+gqqrKGtbwgEL8Wd/AGtbws8SaAqzhgcaaAqzhgcaa
      AqzhgcaaAqzhgcYKBRgbGwUgODNFLPfJ50omjj8cX3Hi1St9hZ/DkXDh59FRbQzvxDiZu4wv
      jY+PoQC9508TzapMTEywfCifz7fi+ExggoHZWP5mCUeTd3fhNTxw0C3/ZXx8jIaGRkKz05jd
      NUz2XSQtWNjSUkY8oycxOshCKEpZRT1jQ9eIx0I0tq3n7bffYtfuR2hvrsc7MUF1QyMjE5OU
      lbo523ONsuoGdHKaaCiAs9iFd3aBptb1xMIBKl1GZpImgpN9SNZiNrQ1o4/NM+wrJxD0Eu+b
      IBOZosLj4FLvEJW1jQi5JKDS3XWOREZiY4OF7u4pQjN26lwyh8/M8OUvP06x0/ozeqxr+Lxg
      xQogp+N0dXVxdWCEXHCUs9dmGbl8lsVwiClfjDHvPNu2NjE9Oo+7tIKdWxoZGg3S0tJCe3M9
      AFvXV9FzbQxRZ+HUieOoko6zZ88w3HeFiqZ2In4fuZyMTqdjanqaXMzHlC/IwnwAUdT0sap9
      IzNXTqJ3rycXm0YQRE5+fAJBkjhz9gzT01MERrvQlW/AQI4c0NDaQS6ToLyykpZ1HWvCv4bb
      wgoFkIxWtm3bRse6JiRrMRVFZhrWd2LXa3/PJSJcvHSFLCAIy05NJ7g2PA6AtayVwRM/omnj
      Jqpra0FW6OzsxGR3UWQ14HS50UkKff1DRAPzdF8dBEWluKSE/oEls0qyMn71Mk0dbWQCY5g8
      zVTX1aAq2lgAVncFo1fOMTQ2pX0RQQAB0JmZn7yGP5y4n89tDV8QCHeSCR7s6yEQXMRV2cm6
      Bs/9vK9PhZyOcbGnn/nFIF965sk1b34Nd4U7UoA1rOGLhrWJcw0PNHSffsitoSgKqqqytpCs
      4fOIu1AAlamJCcoryhgdm6F5XRPIWlTnfiKXy93Xa6yN/2COf8dXVFJB5hZDRBZDCMUlSIB8
      L+5wDWv4GeCOfQA5p6CiItntpOeniGTvx22tYQ0/HdyTKJAsy0iSdC/u56b4oi7Ba+P/bMdf
      iwKt4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHG
      mgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHGmgKs4YHG
      mgKs4YFC79gCrx3uoXdsAbgLBZidHOPc2S6GRgfpudp/z29wDfcP2ZzMG8f6eOPYVbK5B7OX
      x8XBWV462MnFwVngLtqiCJKIQVTJCQbsFhVFUQrNse4nFEUhl8t9+oFr498UH1wcY/f6qqWf
      R9m/teGejv+T4Kc1vijAB10jiIJWKH/HXSHkbIqpWT8VHgeRlEKJ27nWFeIzNr6iqHgXI1R5
      HIiiUDhmZCbI+X4vADvaqmiqdN3V+PcDP63xr382a21RvoDjv37kClUldqZ9UX7pyY0rjgtF
      UwAU2U13Pf79wFpblDXcM+QUhUc31yMryg1/K7Kb7lj4v8hYU4AvILa2VvDa4R62tlb8xGMF
      oknePTNEKJa6B3f22cOaAnwBsaGhlJcOdrKhofQnHuvN4/3sXF/FD08O3oM7++xhTQHWwMhM
      kCMXRh/I0OiaAjzgCEVTnO/30lFfwpsnBm74+/MPt3Guz8tze1vvavxsTubIhVFGZoI/6a3e
      F6wpwE1ws1mxd2yBV97r5p+OXEFRPjubgozOhu7LLO62m3nmoRaKbHfnOL95YoCO+hLO93sL
      EajPEtYUYBUsnxX/4VA3f/fOJf7unUsEokkuD83x8lObqC6x412M/KxvFdDut2tw9qaz+K1Q
      ZDexo62Kq+M+nt+37j7doZab+N5Hn70s9P3d1uULgO7hOf7k1x4D4OzVaTa3lPPKe91IosjD
      nXWF4452jTLrj/HUziZKiu79HsXZnLwk3CrP72tDr7t3eZemStcdJcXuBM/vW8exyxPEkhme
      3a2ZUccuT/Dk9sb7cr07xVoi7Cbjj8wEGZ0JsqmpjLdPaxGQrz7chstuvuHcWX+UK6MLHNjW
      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
    </thumbnail>
    <thumbnail height='192' name='Kimedashi' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACN0lEQVR4nO3WsQ0CMRBFQYM4dwAB/RdGgGjDpNDAOXgz2WY/edJe1lprQNR19wDYSQCk
      3X6Pz/s1jjl3bYHT/QVwzDnuj+euLXA6LxBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKR9AV9KCJG6PCmVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weight Dashboard' width='192'>
      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
      QadepPUvgLD7JzwDdgEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='31' name='Weight Pro Card' width='84'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
